---

- hosts: localhost
  gather_facts: False
  connection: local

  vars_files:
    - system_config.yml

  tasks:
  - name: Deploy Primary {{db_type}} EC2 instance on AWS
    ec2_instance:
      name: "Primary-{{db_type}}"
      key_name: "{{key_name}}"
      instance_type: "{{instance_type}}"
      image_id: "{{image_id}}"
      security_group: "{{security_group}}"
      vpc_subnet_id: "{{vpc_subnet_id_1}}"
      network: 
        assign_public_ip: no
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: ec2_1
    tags:
      - ec2
      - primary 
      - mongo
      - riak

  - name: Assign Elastic IP to the Primary {{db_type}} node
    ec2_eip:
      device_id: "{{ ec2_1.instance_ids[0] }}"
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: eip_1
    tags:
      - eip
      - mongo

  - name: Check for SSH on the Primary box
    wait_for:
      host: "{{eip_1.public_ip}}"
      port: 22
      timeout: 320
      state: started
      search_regex: OpenSSH
      delay: 10
      tags:
        - check_ssh
        - mongo


#--------------------------------------------------------------------------------------------------------------------------

  - name: Deploy Secondary 1 {{db_type}} EC2 instance on AWS
    ec2_instance:
      name: "Secondary1-{{db_type}}"
      key_name: "{{key_name}}"
      instance_type: "{{instance_type}}"
      image_id: "{{image_id}}"
      security_group: "{{security_group}}"
      vpc_subnet_id: "{{vpc_subnet_id_1}}"
      network: 
        assign_public_ip: no
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: ec2_2
    tags:
      - ec2
      - secondary1
      - mongo
      - riak

  - name: Assign Elastic IP to the Secondary 1 {{db_type}} node
    ec2_eip:
      device_id: "{{ ec2_2.instance_ids[0] }}"
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: eip_2
    tags:
      - eip
      - mongo

  - name: Check for SSH on the Secondary 1 {{db_type}} node
    wait_for:
      host: "{{eip_2.public_ip}}"
      port: 22
      timeout: 320
      state: started
      search_regex: OpenSSH
      delay: 10
      tags:
        - check_ssh
        - mongo

#--------------------------------------------------------------------------------------------------------------------------

  - name: Deploy Secondary 2 {{db_type}} EC2 instance on AWS
    ec2_instance:
      name: "Secondary2-{{db_type}}"
      key_name: "{{key_name}}"
      instance_type: "{{instance_type}}"
      image_id: "{{image_id}}"
      security_group: "{{security_group}}"
      vpc_subnet_id: "{{vpc_subnet_id_1}}"
      network: 
        assign_public_ip: no
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: ec2_3
    tags:
      - ec2
      - secondary2
      - mongo
      - riak

  - name: Assign Elastic IP to the Secondary 2 {{db_type}} node
    ec2_eip:
      device_id: "{{ ec2_3.instance_ids[0] }}"
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: eip_3
    tags:
      - eip
      - mongo

  - name: Check for SSH on the Secondary 2 {{db_type}} node
    wait_for:
      host: "{{eip_3.public_ip}}"
      port: 22
      timeout: 320
      state: started
      search_regex: OpenSSH
      delay: 10
      tags:
        - check_ssh
        - mongo

#--------------------------------------------------------------------------------------------------------------------------
  
  - name: Deploy Secondary 3 {{db_type}} EC2 instance on AWS
    ec2_instance:
      name: "Secondary3-{{db_type}}"
      key_name: "{{key_name}}"
      instance_type: "{{instance_type}}"
      image_id: "{{image_id}}"
      security_group: "{{security_group}}"
      vpc_subnet_id: "{{vpc_subnet_id_2}}"
      network: 
        assign_public_ip: no
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: ec2_4
    tags:
      - ec2
      - secondary3
      - mongo
      - riak

  - name: Assign Elastic IP to the Secondary 3 {{db_type}} node
    ec2_eip:
      device_id: "{{ ec2_4.instance_ids[0] }}"
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: eip_4
    tags:
      - eip
      - mongo

  - name: Check for SSH on the Secondary 3 {{db_type}} node
    wait_for:
      host: "{{eip_4.public_ip}}"
      port: 22
      timeout: 320
      state: started
      search_regex: OpenSSH
      delay: 10
      tags:
        - check_ssh
        - mongo

#--------------------------------------------------------------------------------------------------------------------------
  
  - name: Deploy Secondary 4 {{db_type}} EC2 instance on AWS
    ec2_instance:
      name: "Secondary4-{{db_type}}"
      key_name: "{{key_name}}"
      instance_type: "{{instance_type}}"
      image_id: "{{image_id}}"
      security_group: "{{security_group}}"
      vpc_subnet_id: "{{vpc_subnet_id_2}}"
      network: 
        assign_public_ip: no
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: ec2_5
    tags:
      - ec2
      - secondary4
      - mongo
      - riak


  - name: Assign Elastic IP to the Secondary 4 {{db_type}} node
    ec2_eip:
      device_id: "{{ ec2_5.instance_ids[0] }}"
      region: "{{region}}"
      aws_access_key: "{{aws_access_key}}" 
      aws_secret_key: "{{aws_secret_key}}"
    register: eip_5
    tags:
      - eip
      - mongo


  - name: Check for SSH on the Secondary 4 {{db_type}} node
    wait_for:
      host: "{{eip_5.public_ip}}"
      port: 22
      timeout: 320
      state: started
      search_regex: OpenSSH
      delay: 10
      tags:
        - check_ssh
        - mongo

  - name: Write all Private IPs to inventory file
    blockinfile:
      path: riak-inventory
      block: |
        [{{ db_type }}-primary] 
        {{ ec2_1.instances[0]['network_interfaces'][0]['private_ip_address'] }}
        [{{ db_type }}-secondary1] 
        {{ ec2_2.instances[0]['network_interfaces'][0]['private_ip_address'] }}
        [{{ db_type }}-secondary2] 
        {{ ec2_3.instances[0]['network_interfaces'][0]['private_ip_address'] }}
        [{{ db_type }}-secondary3] 
        {{ ec2_4.instances[0]['network_interfaces'][0]['private_ip_address'] }}
        [{{ db_type }}-secondary4] 
        {{ ec2_5.instances[0]['network_interfaces'][0]['private_ip_address'] }}
        [hosts:children]
        {{ db_type }}-primary
        {{ db_type }}-secondary1
        {{ db_type }}-secondary2
        {{ db_type }}-secondary3
        {{ db_type }}-secondary4
        [hosts:vars]
        ansible_user=ec2-user
        ansible_ssh_private_key_file={{ ansible_ssh_private_key_file }}
    tags: 
      - private
      - riak


  - name: Write all Public IPs to inventory file
    blockinfile:
      path: mongo-inventory
      block: |
        [{{ db_type }}-primary] 
        {{ eip_1.public_ip }}
        [{{ db_type }}-secondary1] 
        {{ eip_2.public_ip }}
        [{{ db_type }}-secondary2] 
        {{ eip_3.public_ip }}
        [{{ db_type }}-secondary3] 
        {{ eip_4.public_ip }}
        [{{ db_type }}-secondary4] 
        {{ eip_5.public_ip }}
        [hosts:children]
        {{ db_type }}-primary
        {{ db_type }}-secondary1
        {{ db_type }}-secondary2
        {{ db_type }}-secondary3
        {{ db_type }}-secondary4
        [hosts:vars]
        ansible_user=ubuntu
        ansible_ssh_private_key_file={{ ansible_ssh_private_key_file }}
    tags: 
      - public
      - mongo
